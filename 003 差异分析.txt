# 用DESeq2进行有重复样本的单因素差异分析

cd ~/Documents/rna_seq/${LOCA}/deseq2

R

library(DESeq2)
library(ggplot2)

count_matrix <- read.table("expression.txt", ,sep = "\t",header=T,row.names = 1)

# 若只对部分分析，则筛选指定列
# count_matrix <- count_matrix[, c("X1.1", "X1.2", "X2.1", X2.2")]

head(count_matrix)

#检查是否有NA值，用0替换
sum(is.na(count_matrix))
count_matrix[is.na(count_matrix)] <- 0

# 替换列名中的特殊字符
colnames(count_matrix) <- gsub("\\.", "_", colnames(count_matrix))

#下一步的样本信息创建需对应表头的顺序
head(count_matrix)

# 创建样本信息
sample_names <- colnames(count_matrix)
genotype <- factor(rep(c("a1", "col", "nacla1", "naclcol"), each = 2))  
print(genotype)

col_data <- data.frame(
  row.names = sample_names,
  genotype = genotype
)

# 设置基因型 "col" 为对照
col_data$genotype <- relevel(col_data$genotype, ref = "col")

# 创建DESeqDataSet对象
dds <- DESeqDataSetFromMatrix(countData = count_matrix,
                              colData = col_data,
                              design = ~ genotype)

#过滤低表达基因。
keep <- rowMeans(counts(dds)) > 10
dds <- dds[keep, ]

# 运行差异表达分析
dds <- DESeq(dds)

# 提取标准化计数（表达量）
normalized_counts <- counts(dds, normalized=TRUE)
write.csv(normalized_counts, file="geno_normalized_counts.csv", row.names=TRUE)

# 查看结果名称
resultsNames(dds)

# 提取原始结果
results <- results(dds, name = "genotype_a1_vs_col")
write.csv(results, "genotype_a1_vs_col.csv")

# 绘制MA图
pdf("MA_genotype_a1_vs_col.pdf")
plotMA(results, main="genotype_a1_vs_col", ylim=c(-4,4))
dev.off()

# 根据数据结构决定是否使用 apeglm或ashr收缩
# results_shrink <- lfcShrink(dds, coef = "genotype_a1_vs_col", type = "ashr")
# write.csv(results_shrink, "FC_a1_vs_col.csv")

# 进行rlog或vst变换，使数据适合绘图
rld <- rlog(dds, blind=FALSE)
rlog_counts <- assay(rld)
write.csv(rlog_counts, file="rlog_counts.csv", row.names=TRUE)


# 绘制 PCA 图，重看处理效果和重复性
pca_data <- plotPCA(rld, intgroup = c("genotype"), returnData = TRUE)

pca_plot <- ggplot(pca_data, aes(x = PC1, y = PC2, color = genotype)) +
  geom_point(size = 3) +
  labs(title = "PCA Plot", x = "PC1", y = "PC2") +
  theme_minimal()

pdf("PCA_rlog_genotype.pdf")
print(pca_plot)
dev.off()
